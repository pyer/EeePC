#!/bin/sh -e
PATH="/sbin:/bin"

# we need to unmount /dev/pts/ and remount it later over the devtmpfs
unmount_devpts() {
  if mountpoint -q /dev/pts/; then
    umount -n -l /dev/pts/
  fi

  if mountpoint -q /dev/shm/; then
    umount -n -l /dev/shm/
  fi
}

# mount a devtmpfs over /dev, if somebody did not already do it
mount_devtmpfs() {
  if grep -E -q "^[^[:space:]]+ /dev devtmpfs" /proc/mounts; then
    mount -n -o remount,nosuid,size=10M,mode=0755 -t devtmpfs devtmpfs /dev
    return 0
  fi

  if ! mount -n -o nosuid,size=10M,mode=0755 -t devtmpfs devtmpfs /dev; then
    echo "udevd requires devtmpfs support, not started"
    return 1
  fi

  return 0
}

make_static_nodes() {
  [ -e /lib/modules/$(uname -r)/modules.devname ] || return 0
  [ -x /bin/kmod ] || return 0

  echo "Make static nodes"
  /bin/kmod static-nodes --format=tmpfiles --output=/proc/self/fd/1 | \
  while read type name mode uid gid age arg; do
    [ -e $name ] && continue
    case "$type" in
      c|b|c!|b!) mknod -m $mode $name $type $(echo $arg | sed 's/:/ /') ;;
      d|d!) mkdir $name ;;
      *) echo "unparseable line ($type $name $mode $uid $gid $age $arg)" >&2 ;;
    esac
  done
}

##############################################################################

echo "Starting udev"
if [ -e /etc/udev/udev.conf ]; then
  . /etc/udev/udev.conf
fi

if [ ! -e /proc/filesystems ]; then
  echo "udev requires a mounted procfs, not started"
  exit 1
fi

if ! grep -q '[[:space:]]devtmpfs$' /proc/filesystems; then
  echo "udev requires devtmpfs support, not started"
  exit 1
fi

if [ ! -d /sys/class/ ]; then
  echo "udev requires a mounted sysfs, not started"
  exit 1
fi

if ! ps --no-headers --format args ax | egrep -q '^\['; then
  echo "udev does not support containers, not started"
  exit 0
fi

# When modifying this script, do not forget that between the time that the
# new /dev has been mounted and udevadm trigger has been run there will be
# no /dev/null. This also means that you cannot use the "&" shell command.

if [ -w /sys/kernel/uevent_helper ]; then
	echo > /sys/kernel/uevent_helper
fi

if ! mountpoint -q /dev/; then
	unmount_devpts
	mount_devtmpfs
	[ -d /proc/1 ] || mount -n /proc
fi

make_static_nodes

# clean up parts of the database created by the initramfs udev
udevadm info --cleanup-db

echo "Synthesizing the initial hotplug events (subsystems)"
udevadm trigger --type=subsystems --action=add
echo "Synthesizing the initial hotplug events (devices)"
udevadm trigger --type=devices --action=add

# wait for the udev childs to finish
echo "Waiting for /dev to be fully populated"
udevadm settle

