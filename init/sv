#!/bin/sh
#
action=$1
service=$2

PATH=/sbin:/usr/sbin:/bin:/usr/bin

check_service() {
  if [ -z ${service} ]
  then
    echo "ERROR: service undefined"
    exit 1
  fi
}

check_enabled_service() {
  check_service
  if [ ! -d "/etc/svdir/enabled/${service}/supervise" ]
  then
    if [ -d "/etc/svdir/available/${service}" ]
    then
      echo "ERROR: service ${service} is disabled"
    else
      echo "ERROR: service ${service} not found"
    fi
    exit 1
  fi
}

case "${action}" in
  up)
    check_enabled_service
    /usr/bin/printf "u" >/etc/svdir/enabled/${service}/supervise/control
    /usr/bin/cat /etc/svdir/enabled/${service}/supervise/stat
    ;;
  down)
    check_enabled_service
    /usr/bin/printf "d" >/etc/svdir/enabled/${service}/supervise/control
    /usr/bin/cat /etc/svdir/enabled/${service}/supervise/stat
    ;;
  status|st)
    check_service
    if [ -d "/etc/svdir/enabled/${service}/supervise" ]
    then
      /usr/bin/cat /etc/svdir/enabled/${service}/supervise/stat
    else
      if [ -d "/etc/svdir/available/${service}" ]
      then
        echo "disabled"
      else
        echo "not found"
      fi
    fi
    ;;
  enable)
    check_service
    if [ ! -d "/etc/svdir/enabled/${service}/supervise" ]
    then
      if [ ! -d "/etc/svdir/available/${service}" ]
      then
        echo "ERROR: service ${service} not found"
        exit 1
      fi
      /usr/bin/ln -s /etc/svdir/available/${service} /etc/svdir/enabled/${service}
    fi
    ;;
  disable)
    check_enabled_service
    /usr/bin/printf "d" >/etc/svdir/enabled/${service}/supervise/control
    /usr/bin/rm -rf /etc/svdir/enabled/${service}
    ;;
  list)
    ls -1 /etc/svdir/enabled | sort
    ;;
  *)
    echo "Usage: sv <down | up | status | enable | disable> service"
    echo "   or: sv list"
    ;;
esac
