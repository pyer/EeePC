#!/bin/bash

#Default
. /etc/os-release
DISTRO=$PRETTY_NAME

##functions

help_text() {
  echo $"Usage: $0 <drive>"
  echo $"Where drive is the name of the drive where $DISTRO is to be installed on."
  echo $"   For example: $0 sdb1"
  echo
}

make_dir() {
  echo "Copy $1"
  cp -ra $1 .
}

make_etc() {
  echo "Copy /etc files"
  cp -a /etc/adjtime .
  cp -a /etc/bash.bashrc .
  cp -a /etc/ca-certificates.conf .
  cp -a /etc/crontab .
  cp -a /etc/debconf.conf .
  cp -a /etc/debian_version .
  cp -a /etc/environment .
  cp -a /etc/ethertypes .
  cp -a /etc/group* .
  cp -a /etc/gshadow* .
  cp -a /etc/inputrc .
  cp -a /etc/issue .
  cp -a /etc/ld.so.cache .
  cp -a /etc/ld.so.conf .
  cp -a /etc/libaudit.conf .
  cp -a /etc/login.defs .
  cp -a /etc/machine-id .
  cp -a /etc/magic* .
  cp -a /etc/manpath.config .
  cp -a /etc/mime.types .
  cp -a /etc/modules .
  cp -a /etc/motd .
  cp -a /etc/mtab .
  cp -a /etc/networks .
  cp -a /etc/os-release .
  cp -a /etc/passwd* .
  cp -a /etc/profile .
  cp -a /etc/protocols .
  cp -a /etc/resolv.conf .
  cp -a /etc/services .
  cp -a /etc/shadow* .
  cp -a /etc/shells .
  cp -a /etc/sub* .
  cp -a /etc/sysctl.conf .
  cp -a /etc/timezone .
  echo "Copy /etc directories"
  cp -ra /etc/apt .
  cp -ra /etc/avahi .
  cp -ra /etc/bash_completion.d .
  cp -ra /etc/bluetooth .
  cp -ra /etc/ca-certificates .
  cp -ra /etc/dhcp .
  cp -ra /etc/dictionaries-common .
  cp -ra /etc/dpkg .
  cp -ra /etc/groff .
  cp -ra /etc/ld.so.conf.d .
  cp -ra /etc/network .
  cp -ra /etc/ntpsec .
  cp -ra /etc/pam* .
  cp -ra /etc/perl .
  cp -ra /etc/profile.d .
  cp -ra /etc/security .
  cp -ra /etc/selinux .
  cp -ra /etc/shutdown* .
  cp -ra /etc/skel .
  cp -ra /etc/ssh .
  cp -ra /etc/ssl .
  cp -ra /etc/startup* .
  cp -ra /etc/sudo* .
  cp -ra /etc/sysctl.d .
  cp -ra /etc/tasks .
  cp -ra /etc/udev .
  cp -ra /etc/vim .
  cp -ra /etc/wpa_supplicant .
}

make_fstab() {
  echo "Make fstab"
  echo "$TARGET / ext4 defaults,relatime 0 1" >fstab
  SWAPDEV=$(swapon --show --noheadings |cut -d ' ' -f1)
  [ -n $SWAPDEV ] && echo "$SWAPDEV none swap defaults 0 0" >>fstab
}

make_hostname() {
  echo "Make hostname"
  echo "$DRIVE" >hostname
  # Update /etc/hosts
  echo "127.0.0.1 localhost $DRIVE" >hosts
  # The following lines are desirable for IPv6 capable hosts
  echo "::1     localhost ip6-localhost ip6-loopback" >>hosts
  echo "ff02::1 ip6-allnodes"   >>hosts
  echo "ff02::2 ip6-allrouters" >>hosts
}

yn() {
x=1
while [[ "$x" -eq 1 ]]
do
x=0
read -p "$*? "
if [[ ("$REPLY" > "x~" && "$REPLY" < "z" ) || ("$REPLY" > "X~" && "$REPLY" < "Z") ]]
  then ans=1	# yes
  elif [[ ("$REPLY" > "m~" && "$REPLY" < "o" ) || ( "$REPLY" > "M~" && "$REPLY" < "O") ]]
  then ans=0	# no
  elif [[ -z "$REPLY" ]]
  then ans=-1	# default
  else
  x=1
  echo $"Invalid; retry:"
fi
done
}

##End of functions

## Main entry
#
if [[ "$1" == "-h" || "$1" == "--help" || "$1" == "help" || -z $1 ]]
then
  help_text
  exit
fi

# Run as root check
if [[ $UID -ne 0 ]]
  then
  echo "Error: please run this script as root."
  exit 1
fi

# Target disk
DRIVE=$1

TARGET="/dev/$DRIVE"
SOURCE=$(mount | grep ' on / ' | cut -d ' ' -f 1)
if [ "$TARGET" == "$SOURCE" ]
then
  echo "ERROR: the current boot disk will be destroyed."
  exit 1
fi

# Show requirements
kernel="$(uname -sr)"
echo "Install $kernel on /dev/$DRIVE"
echo "Beware, all data on $DRIVE wil be destroyed."
yn $"Are you sure ? (y/N)"
echo
if [[ $ans -eq 1 ]]
then
  echo "Work in progress..."
else
  exit
fi

if mountpoint -q /mnt
then
  umount /mnt
fi
mount $TARGET /mnt
echo "Clear /mnt"
rm -rf /mnt/*
cd /mnt
make_dir /boot
make_dir /usr
make_dir /home
make_dir /root
make_dir /var
echo "Create directories in /"
mkdir dev
mkdir media
mkdir mnt
mkdir proc
mkdir run
mkdir sys
mkdir -m 0777 tmp
ln -s usr/bin  bin
ln -s usr/lib  lib
ln -s usr/sbin sbin
mkdir etc
cd etc
make_etc
make_fstab
make_hostname
echo "Done."
